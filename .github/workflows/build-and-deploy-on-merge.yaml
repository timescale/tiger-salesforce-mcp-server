name: Build and Deploy - Merge main
on:
  push:
    branches:
      - main

jobs:
  release:
    name: Build Docker
    uses: timescale/cloud-actions/.github/workflows/build.yaml@main
    with:
      tags: |
        latest
        auto-${{ github.sha }}
        ${{ github.sha }}
      registry: 142548018081.dkr.ecr.us-east-1.amazonaws.com/tiger-salesforce-mcp-server
      dockerfile_path: ./Dockerfile
      skip-scan: true
    secrets:
      API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
      AWS_ACCESS_KEY_ID: ${{ secrets.ORG_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.ORG_AWS_SECRET_ACCESS_KEY }}

  deploy:
    name: Deploy dev us-east-1
    uses: timescale/cloud-actions/.github/workflows/deploy.yaml@main
    needs: release
    with:
      env: dev
      region: us-east-1
      tag: ${{ github.sha }}
      registry: 142548018081.dkr.ecr.us-east-1.amazonaws.com/tiger-salesforce-mcp-server
      chart_name: tiger-salesforce-mcp-server
      chart_namespace: savannah-system
      helm_timeout: 20m
    secrets:
      API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
      ORG_AWS_ACCESS_KEY_ID: ${{ secrets.ORG_AWS_ACCESS_KEY_ID }}
      ORG_AWS_SECRET_ACCESS_KEY: ${{ secrets.ORG_AWS_SECRET_ACCESS_KEY }}
      ORG_KUBECONFIG_DEV: ${{ secrets.ORG_KUBECONFIG_DEV_US_EAST_1_1 }}
      ORG_KUBECONFIG_DEV_EU_CENTRAL_1: ${{ secrets.ORG_KUBECONFIG_DEV_EU_CENTRAL_1 }}
      ORG_KUBECONFIG_DEV_US_WEST_2: ${{ secrets.ORG_KUBECONFIG_DEV_US_WEST_2 }}
      ORG_KUBECONFIG_PROD: ${{ secrets.ORG_KUBECONFIG_PROD }}
      ORG_KUBECONFIG_PROD_AP_NORTHEAST_1: ${{ secrets.ORG_KUBECONFIG_PROD_AP_NORTHEAST_1 }}
      ORG_KUBECONFIG_PROD_AP_SOUTHEAST_1: ${{ secrets.ORG_KUBECONFIG_PROD_AP_SOUTHEAST_1 }}
      ORG_KUBECONFIG_PROD_AP_SOUTHEAST_2: ${{ secrets.ORG_KUBECONFIG_PROD_AP_SOUTHEAST_2 }}
      ORG_KUBECONFIG_PROD_CA_CENTRAL_1: ${{ secrets.ORG_KUBECONFIG_PROD_CA_CENTRAL_1 }}
      ORG_KUBECONFIG_PROD_EU_CENTRAL_1: ${{ secrets.ORG_KUBECONFIG_PROD_EU_CENTRAL_1 }}
      ORG_KUBECONFIG_PROD_EU_WEST_1: ${{ secrets.ORG_KUBECONFIG_PROD_EU_WEST_1 }}
      ORG_KUBECONFIG_PROD_EU_WEST_2: ${{ secrets.ORG_KUBECONFIG_PROD_EU_WEST_2 }}
      ORG_KUBECONFIG_PROD_SA_EAST_1: ${{ secrets.ORG_KUBECONFIG_PROD_SA_EAST_1 }}
      ORG_KUBECONFIG_PROD_US_EAST_2: ${{ secrets.ORG_KUBECONFIG_PROD_US_EAST_2 }}
      ORG_KUBECONFIG_PROD_US_WEST_2: ${{ secrets.ORG_KUBECONFIG_PROD_US_WEST_2 }}
      ORG_KUBECONFIG_PROD_AP_SOUTH_1: ${{ secrets.ORG_KUBECONFIG_PROD_AP_SOUTH_1 }}

  # send-release-message:
  #   runs-on: ubuntu-latest
  #   needs: release
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0 # Fetch full history to access previous commits

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '22'
  #         cache: 'npm'

  #     - name: Install dependencies
  #       run: npm ci --legacy-peer-deps

  #     - name: Install Claude Code
  #       run: npm install -g @anthropic-ai/claude-code

  #     - name: Run Claude Code Analysis
  #       env:
  #         ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
  #         PREVIOUS_SHA: ${{ github.event.before }}
  #         SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
  #         SLACK_APP_TOKEN: ${{ secrets.SLACK_APP_TOKEN }}
  #         SLACK_SIGNING_SECRET: ${{ secrets.SLACK_SIGNING_SECRET }}
  #       run: |
  #         # Replace placeholder in prompt file and run Claude Code
  #         sed "s/PREVIOUS_SHA_PLACEHOLDER/$PREVIOUS_SHA/g" prompt-for-slack-update.md | claude -p \
  #           --allowedTools "Bash(git log:*)" "Bash(git diff:*)" "Bash(npm run send-slack-message:*)" \
  #           --max-turns 10 \
  #           --output-format json
