apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ .Values.name }}
  labels:
    app: {{ .Values.name }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
      {{- if .Values.podAnnotations }}
      annotations: {{- toYaml .Values.podAnnotations | nindent 8 }}
      {{- end}}
    spec:
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      serviceAccountName: {{ .Values.name }}
      nodeSelector:
        savannah/role: system
      tolerations:
        - key: "savannah/role"
          operator: "Equal"
          value: "system"
          effect: "NoSchedule"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - {{ .Values.name }}
      containers:
        - name: {{ .Values.name }}
          image: {{ .Values.imageName }}:{{ .Values.imageTag }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          args:
            - "node"
            - "dist/index.js"
            - "http"
            {{- if .Values.instrumentation.enabled }}
            - "--instrument"
            {{- end }}
          ports:
            - containerPort: {{ .Values.containerPort }}
              protocol: TCP

          resources:
            requests:
              memory: {{ .Values.resources.requests.memory }}
              cpu: {{ .Values.resources.requests.cpu }}
            limits:
              memory: {{ .Values.resources.limits.memory }}

          env:
            - name: PGHOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.name }}-database
                  key: host
            - name: PGDATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.name }}-database
                  key: database
            - name: PGPORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.name }}-database
                  key: port
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.name }}-database
                  key: user
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.name }}-database
                  key: password
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.name }}-openai
                  key: apiKey
            - name: OTEL_SERVICE_NAME
              value: {{ .Values.name }}
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: {{ .Values.instrumentation.otlpEndpoint | quote }}
            - name: LOGFIRE_TRACES_ENDPOINT
              value: {{ .Values.logfire.tracesEndpoint | quote }}
            - name: LOGFIRE_LOGS_ENDPOINT
              value: {{ .Values.logfire.logsEndpoint | quote }}
            - name: LOGFIRE_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.name }}-logfire
                  key: token
